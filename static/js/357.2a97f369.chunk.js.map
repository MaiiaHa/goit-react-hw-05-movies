{"version":3,"file":"static/js/357.2a97f369.chunk.js","mappings":"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","sources":["api/Api.jsx","components/Reviews.js"],"sourcesContent":["// import axios from 'axios';\n\nconst KEY = '319d5522e2117aa6383989c80b35f4f5';\nconst URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    // Authorization: 'Bearer 319d5522e2117aa6383989c80b35f4f5',\n  },\n};\n\n//====== img posters\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function getTrendingMovies(page = 1) {\n  return fetch(\n    `${URL}/trending/all/day?language=en-US&page=${page}&api_key=${KEY}`,\n    options\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(\n        new Error(`There are not images in trending films`)\n      );\n    }\n    return response.json();\n  });\n}\n\nexport function searchMovies(searchInput, page = 1) {\n  return fetch(\n    `${URL}/search/movie?include_adult=false&language=en-US&query=${searchInput}&page=${page}&api_key=${KEY}`,\n    options\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(\n        new Error(`There are not images for ${searchInput} search request`)\n      );\n    }\n    return response.json();\n  });\n}\n\nexport function renderMovieDetails(movie_id) {\n  return fetch(\n    `${URL}/movie/${movie_id}?language=en-US&api_key=${KEY}`,\n    options\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(new Error(`There are not movie data`));\n    }\n    return response.json();\n  });\n}\n\nexport function renderCastDetails(movie_id) {\n  return fetch(\n    `${URL}/movie/${movie_id}/credits?language=en-US&api_key=${KEY}`,\n    options\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(new Error(`There are not cast data`));\n    }\n    return response.json();\n  });\n}\n\nexport function renderReviewDetails(movie_id) {\n  return fetch(\n    `${URL}/movie/${movie_id}/reviews?language=en-US&page=1&api_key=${KEY}`,\n    options\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(new Error(`There are not review data`));\n    }\n    return response.json();\n  });\n}\n","//http://localhost:3000/goit-react-hw-05-movies/movies/movie-03/reviews\n\nimport { useParams } from 'react-router-dom';\nimport { renderReviewDetails } from '../api/Api';\nimport { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport { Loader } from './Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewesList, setReviewesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    renderReviewDetails(movieId)\n      .then(({ results, total_results }) => setReviewesList([...results]))\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  if (reviewesList.length === 0)\n    return <div>There is no information for this movie</div>;\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <Loader />}\n      <ul>\n        {reviewesList.map(({ author, created_at, updated_at, content, id }) => {\n          return (\n            <li key={id}>\n              <h3>\n                Autor: {author} -{' '}\n                {format(new Date(created_at), 'MMMM, dd yyyy ')}\n                {updated_at\n                  ? ` (updated on ${format(\n                      new Date(updated_at),\n                      'MMMM, dd yyyy '\n                    )})`\n                  : ''}\n              </h3>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","URL","options","method","headers","accept","IMAGE_URL","getTrendingMovies","page","arguments","length","undefined","fetch","concat","then","response","ok","json","Promise","reject","Error","searchMovies","searchInput","renderMovieDetails","movie_id","renderCastDetails","renderReviewDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewesList","setReviewesList","_useState3","_useState4","isLoading","setIsLoading","useEffect","_ref","results","total_results","_toConsumableArray","catch","err","console","log","finally","_jsx","children","_jsxs","Loader","map","_ref2","author","created_at","updated_at","content","id","format","Date"],"sourceRoot":""}