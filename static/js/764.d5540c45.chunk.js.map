{"version":3,"file":"static/js/764.d5540c45.chunk.js","mappings":"6LA0EA,UAvEe,WAAO,IAADA,EACnBC,GAA4BC,EAAAA,EAAAA,UAAS,CACnC,WACA,WACA,WACA,WACA,aACAC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GANKI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAOxBI,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAqC,QAA9BhB,EAAGc,EAAaG,IAAI,kBAAU,IAAAjB,EAAAA,EAAI,IAG/CkB,EAAAA,EAAAA,YAAU,WAeR,GACC,IAEH,IAWMC,EAAgBd,EAAOe,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASN,EAAQ,IAGpE,OACEO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOX,EAASY,SAhBb,SAAAC,GACxB,IAAMC,EAAeD,EAAEE,OAAOJ,MAG9BZ,EADuC,KAAjBe,EAAsB,CAAEd,QAASc,GAAiB,CAAC,EAM3E,KAQIL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,GAAGM,QAAS,kBAAMjB,EAAgB,CAAEkB,EAAG,SAAU,EAACT,SAAC,0BAGhED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAEDL,EAAce,KAAI,SAAAb,GACjB,OACEI,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKhB,GAASiB,MAAO,CAAEC,KAAM9B,GAAWe,SAG7CH,KAJIA,EAQb,SAIR,C","sources":["pages/Movies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([\n    'movie-01',\n    'movie-02',\n    'movie-03',\n    'movie-04',\n    'movie-05',\n  ]);\n  console.log(setMovies);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieId = searchParams.get('movieId') ?? '';\n  // console.log(searchParams.get('a'));\n\n  useEffect(() => {\n    //http zapros\n    //   const options = {\n    //     method: 'GET',\n    //     headers: {\n    //       accept: 'application/json',\n    //       Authorization: 'Bearer 319d5522e2117aa6383989c80b35f4f5',\n    //     },\n    //   };\n    //   fetch(\n    //     'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    //     options\n    //   )\n    //     .then(response => response.json())\n    //     .then(response => console.log(response))\n    //     .catch(err => console.error(err));\n  }, []);\n\n  const updateQueryString = e => {\n    const movieIdValue = e.target.value;\n\n    const movieIdSearch = movieIdValue !== '' ? { movieId: movieIdValue } : {};\n    setSearchParams(movieIdSearch);\n    // if (movieIdValue === '') {\n    //   return setSearchParams({});\n    // }\n    // setSearchParams({ movieId: movieIdValue });\n  };\n\n  const visibleMovies = movies.filter(movie => movie.includes(movieId));\n  // console.log(location);\n\n  return (\n    <div>\n      <input type=\"text\" value={movieId} onChange={updateQueryString}></input>\n      <button type=\"\" onClick={() => setSearchParams({ c: 'hello' })}>\n        change search params\n      </button>\n      <ul>\n        Movies :\n        {visibleMovies.map(movie => {\n          return (\n            <li key={movie}>\n              <Link to={`${movie}`} state={{ from: location }}>\n                {/* // '/movies/:movieId' – компонент MovieDetails, сторінка з */}\n                {/* детальною інформацією про кінофільм. */}\n                {movie}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","console","log","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieId","get","useEffect","visibleMovies","filter","movie","includes","_jsxs","children","_jsx","type","value","onChange","e","movieIdValue","target","onClick","c","map","Link","to","concat","state","from"],"sourceRoot":""}